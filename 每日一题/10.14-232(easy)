class MyQueue {
public:
    /** Initialize your data structure here. */
    stack<int> q1,q2;//q1用于进栈，q2用于出栈
    MyQueue() {
        
    }
    
    /** Push element x to the back of queue. */
    void push(int x) {
        q1.push(x);
    }
    void remove(){//如果q1中还有元素，将其转移到q2
        while(!q1.empty()){
            q2.push(q1.top());
            q1.pop();
        }
    }
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
        int x;
        if(q2.empty())
            remove();
        x=q2.top();
        q2.pop();
        return x;
    }
    
    /** Get the front element. */
    int peek() {
        int x;
        if(q2.empty())
            remove();
        x=q2.top();
        return x;
    }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        if(q2.empty()&&q1.empty())
            return true;
        return false;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
